<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Google.Protobuf.Reflection" #>
//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcMessage.h"
#include "<#=g.PackageName#>Message.generated.h"

<#
foreach (EnumDescriptorProto enumDefine in g.ProtoFile.EnumType)
{
#>
UENUM(BlueprintType, meta = (DisplayName="<#=g.PackageName#>.<#=enumDefine.Name#>"))
enum class E<#=enumDefine.Name#> : uint8
{
<#
foreach (EnumValueDescriptorProto enumValue in enumDefine.Value)
{
#>
    <#=enumValue.Name#>=<#=enumValue.Number#>,
<#}#>
};
<#}#>

<# 
foreach(DescriptorProto message in g.ProtoFile.MessageType)
{
#>
USTRUCT(BlueprintType, meta = (DisplayName="<#=g.PackageName#>.<#=message.Name#>"))
struct FGrpc<#=g.PackageName#><#=message.Name#> : public FGrpcMessage
{
    GENERATED_USTRUCT_BODY()
<#
foreach(FieldDescriptorProto field in message.Field)
{
#>

    UPROPERTY(BlueprintReadWrite)
<#if(field.Label==FieldDescriptorProto.Types.Label.Repeated) { #>
    TArray<<#=g.GetFieldType(field)#>> <#=g.GetFieldName(field)#>;
<#}else{#>
    <#=g.GetFieldType(field)#> <#=g.GetFieldName(field)#>;
<#}#>
<#
}
#>
};

<#
}
#>
