<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Google.Protobuf.Reflection" #>
//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcClient.h"
#include "<#=s.TurboLinkBasicFileName#>Message.h"
<#
if(s.ServiceArray.Count>0) {
#>
#include "<#=s.CamelFileName#>Client.generated.h"
<#
}
#>

<#
foreach(GrpcService service in s.ServiceArray)
{
foreach (GrpcServiceMethod method in service.MethodArray)
{
#>
DECLARE_DYNAMIC_MULTICAST_DELEGATE_ThreeParams(FOn<#=service.Name#><#=method.Name#>Response, FGrpcContextHandle, Handle, const FGrpcResult&, Result, const <#=method.OutputType#>&, Response);
<#
}
#>

UCLASS(ClassGroup = TurboLink, BlueprintType)
class TURBOLINKGRPC_API U<#=service.Name#>Client : public UGrpcClient
{
	GENERATED_BODY()

public:
<#
foreach (GrpcServiceMethod method in service.MethodArray)
{
#>
	UPROPERTY(BlueprintAssignable)
	FOn<#=service.Name#><#=method.Name#>Response On<#=method.Name#>Response;

<#
}
#>
public:
<#
foreach (GrpcServiceMethod method in service.MethodArray)
{
#>
	UFUNCTION(BlueprintCallable)
	FGrpcContextHandle Init<#=method.Name#>();

	UFUNCTION(BlueprintCallable)
	void <#=method.Name#>(FGrpcContextHandle Handle, const <#=method.InputType#>& Request);

<#
}
#>
public:
	virtual void Shutdown() override;

	UFUNCTION(BlueprintCallable)
	void TryCancel(FGrpcContextHandle Handle);
};

<#
}
#>
